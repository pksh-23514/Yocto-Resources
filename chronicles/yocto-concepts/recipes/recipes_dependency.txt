Adding Dependencies for Packages using Recipes:
===============================================
1. Most SW Packages require a list of other Packages which are known as dependencies.
2. There are two types of dependencies i.e. the Build-time dependencies and the Run-time dependencies.
3. The Build-time dependencies are required when the SW is being Built on the Host Machine.
	1) The 'DEPENDS' variable is used to specify the Build-time dependencies within the Recipes.
		=> DEPENDS = "dependency1 dependency2 ..."
	2) In most scenarios, the items listed in the 'DEPENDS' variable must match the names of the other Recipes i.e. the '.bb' or '.bbappend' file names (without extension).
	3) This should be the Recipes name and not the binary Packages that are generated by the Recipes.
	4) These are dependencies on other Recipes whose contents (Headers and Shared libraries) are needed by the Recipe at Build time.
	5) It is important that all the Build-time dependencies must be explicitly specified in the Recipe file.
4. The Configure scripts might automatically check for optional dependencies and enable the corresponding functionalities if those dependencies are found.
	1) The best practice in the Recipes to explicitly control the optional features using the 'PACKAGECONFIG' variable.
	2) This allows the functionalities and the corresponding dependencies to be enabled or disabled easily and flexibly in the Recipes.
5. The Run-time dependencies are required to be installed on the Target Machine in order for the SW to run successfully.
	1) The 'RDEPENDS' variable is used to specify the Run-time dependencies within the Recipes.
	2) These dependencies are always Package-specific i.e. the Package name should be added to the variable using Override Style Syntax.
		=> RDEPENDS:<package-name> = "dependency1 dependency2 ..."
	3) Since the main Package name has the same name as the Recipe file, the 'PN' variable can be used to specify the main Package dependencies.
		=> RDEPENDS:${PN} = "dependency1 dependency2 ..."
	4) If the Recipe generates multiple Packages, each of the sub-Packages Run-time dependencies must be specified individually.
		=> RDEPENDS:${PN}-tools = "dependency1 dependency2 ..."
6. Some of the Run-time dependencies are set automatically during the Packaging process, especially for Shared libraries.
	1) If a Package 'pkg1' contains a Shared library 'lib' and if another Package 'pkg2' contains a binary that links to this Shared library.
	2) The Build system automatically adds the Run-time dependency for the 'pkg2' on the 'pkg1' as it contains the 'lib'.
