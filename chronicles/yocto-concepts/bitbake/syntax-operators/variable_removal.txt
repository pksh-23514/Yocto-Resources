Removing Values using Override Style Syntax:
============================================
1. The Override Syntax can be used for removing the values from a variable.
	=> VARIABLE:remove = "value"
2. It removes all the occurences of the 'value' from the variable. However, the surrounding spaces and spacing are preserved in the operation.
3. There is no requirement to add a leading or trailing space to the value being removed.
4. Whenever this Syntax is used, the BitBake expects one or more String.
	=> VAL1 = "123 456 789 123456 123 456"
	=> VAL1:remove = "123"
	=> bitbake -e | grep ^VAL1=
	---> VAL1=" 456 789 123456  456"
5. The operation takes into effect during the variable expansion only i.e. it is not applied immediately.
	=> VAL2 = " abc def ghi abcdef abc def def"
	=> VAL2:remove = "\
	       def \
	       abc \
	       ghi \
	       "
	=> TEMPVAL := "${VAL2}"
	=> VAL2 += "abcdef ghi"
	=> bitbake -e | grep ^TEMPVAL=
	---> TEMPVAL="    abcdef   "
	=> bitbake -e | grep ^VAL2=
	---> VAL2="    abcdef    abcdef "

Override Operation Priority Order:
==================================
1. The Override operations are applied in the following order:
	=> :append > :prepend > :remove
2. Therefore, any ':append' or ':prepend' operations will take into effect before any ':remove' operation takes into effect.
3. The Override operation application order may not match with the variable parse history in the BitBake Environment (i.e. the Output of bitbake -e).
4. It is possible that the ':remove' operation may appear before the ':append' or ':prepend' operations in the BitBake Environment.
5. However, the result of the variable is as per the application order as the ':remove' operation is handled at the end.
6. The application order implies that it is not possible to append a previously removed value.
	=> VAL1 = "123 456 789 123456 123 456"
	=> VAL1:remove = "123 456"
	=> VAL1:append = " 123 123 456"
	=> VAL1:prepend = "123 123 456 456 "
	=> bitbake -e | grep ^VAL1=
	---> VAL1="      789 123456     "
	---> The values '123 456' are removed from the variable and cannot be either appended or prepended in the variable again.
7. The workaround for the conditional removal of the values from the variable is the usage of the intermediate variables.
	=> VAL1 = "123 456 789 123456 123 456"
	=> REMOVE = "123 456"
	=> VAL1:remove = "${REMOVE}"
	=> VAL1:append = " 123 123 456"
	=> VAL1:prepend = "123 123 456 456 "
	=> REMOVE = "123"
	=> bitbake -e | grep ^VAL1=
	---> VAL1="  456 456  456 789 123456  456   456"
	---> The conditional change in the values of the intermediate variable can be used to control the values being removed from the variable.
8. This process is very helpful for conditional logic, dynamic Inheritance or Layer-based Configurations.
