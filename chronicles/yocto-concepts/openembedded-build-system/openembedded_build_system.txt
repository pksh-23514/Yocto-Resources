OpenEmbedded Build System:
==========================

OpenEmbedded Build Concepts:
****************************
1. The OpenEmbedded Build system have several functional areas to accomplish the Image and SDK generation.
	1) User Configuration
	2) Meta-data Layers
	3) Source files
	4) Build system (BitBake)
	5) Package Feeds
	6) Images
	7) Application Development SDK

OpenEmbedded Build Workflow:
****************************

			Upstream	Local		SCMs
			Project		Projects	(Optional)
			Releases	   |		  |
			    |		   |		  |
			    V		   V		  V
			-----------------------------------------
			|	     Source Materials		|
			-----------------------------------------
					   |
					   V
			--------------------------------------------------------------------	   -------------------
User			| Source	 ----------------				   |	   |     Package     |
Configuration	---->	| Fetching	 |		|				   | ----> |	  Feeds      |
			|    |		 | Output       |				   |	   -------------------
Meta-Layers		|    V		 | Analysis     |	-----------		   |		|	|
(.bb + Patches)	---->	|  Patch	 | for Package  |	| .deb or |		   |		V	V
			| Application	 | splitting    | ----> | .rpm or | ----> QA Tests |  -------------- --------------
Machins BSP		|    |		 | plus         |	| .ipk    |		   |  |    Image   | |   SDK      |
Configuration	---->	|    V		 | Package      |	-----------		   |  | Generation | | Generation |
			| Config	 | relationship |				   |  -------------- --------------
Policy			| Compile  ----> |              |				   |  -------------- -----------------------------
Configuration	---->	| Autoconf	 ----------------				   |   Linux Images   Application Development SDK
			--------------------------------------------------------------------  -------------- -----------------------------

The brief summary of the above workflow is:
	1) The developers specify the Architecture, Policies, Patches and Configuration details.
	2) The Build system fetches and download the source code from the specified location.
	3) The Build system supports the standard formats such as Tarball or Git repository system.
	4) Once the source code is downloaded, the Build system extracts them to a local work area.
	5) In the local work area, the Patches are applied on the source code and the steps to Configure and Compile the SW are executed.
	6) After the Compilation is successful, the Build system installs the SW into a temporary Staging area where the selected Package format is used to roll-up the SW.
	7) A variety of QA and Sanity checks are run throughout the Build system.
	8) After the binaries are created, the Build system generates the binary Package Feeds that is used to create the final Root file Image.
	9) The Build system generates the Linux Image and a customized Extensible SDK (eSDK) for Application development in parallel.
