Images:
=======
1. The Images produced by the Build system are the compressed forms of the RootFS and are ready to Boot the Target Device.
2. The expanded view of the 'Linux Images' in the 'OpenEmbedded Build Workflow' is as follows:

-----------------------------------------
|					|
| BitBake				|
|			Image		|
|			Generation	|
|			   |		|
-----------------------------------------
			   |
			   |	bitbake <image>
			   |
	Images		   V
-------------------------------------------
| Build Directory			  |
| --------------------------------------- |
| | build				| |
| |   tmp				| |
| |     deploy <------------------------|-|--- DEPLOY_DIR
| |       images			| |
| |         <machine> <-----------------|-|--- DEPLOY_DIR_IMAGE
| |           <kernel-image> <----------|-|--- KERNEL_IMAGETYPE
| |           <root-filesystem-image> <-|-|--- IMAGE_FSTYPES
| |           <kernel-modules> <--------|-|--- MODULE_TARBALL_DEPLOY
| |           <bootloaders>		| |
| |           <symlinks>		| |
| |       sdk				| |
| --------------------------------------- |
-------------------------------------------

3. The Build process writes the Images at the location 'tmp/deploy/images/machine/' inside the Build directory.
	1) The 'DEPLOY_DIR' variable points to the directory used to place the Images, Packages, SDKs and other Output files generated by the Build system.
		---> The default value of the variable is '${TMPDIR}/deploy'.
	2) The 'DEPLOY_DIR_IMAGE' variable points to the directory used to place the Images and other associated Output files that can be loaded on the specific Machine Target.
		---> The default value of the variable is '${DEPLOY_DIR}/images/${MACHINE}/'.
4. This directory contains all the files expected to be loaded on the Target Device.
5. The 'kernel-image' is a Kernel binary file.
	1) The type of the Kernel to be Built for a Device is usually set by the Machine Configuration files.
	2) The 'KERNEL_IMAGETYPE' variable is used while Building the Kernel and is passed to 'make' command as the Target to the Build.
	3) The default value of the variable is 'zImage'.
	4) The additional Kernel Image types can be added to the Build using the 'KERNEL_IMAGETYPES' variables.
	5) The common types of Kernel Images include 'zImage', 'uImage', 'vmlinux', 'Image', 'fitImage', 'bzImage' etc.
6. The 'root-filesystem-image' is the RootFS for the Target Device.
	1) The type of the RootFS Image to be generated in the Build is specified by the 'IMAGE_FSTYPES' variable.
	2) The 'DEPLOY_DIR_IMAGE' directory can contain multiple RootFS Images for the Machine.
	3) If more than one format is specified in the variable, the Build would generate one RootFS Image per format specified.
	4) The complete list of supported RootFS Image formats are listed in the 'IMAGE_TYPES' variable.
7. The 'kernel-modules' are the Tarballs that contain all the Modules built by the Kernel.
	1) The Kernel Module Tarballs i.e. 'modules-*.tgz' file exist only for legacy purposes.
	2) The Tarball creation during the Kernel Build can be controlled by the 'MODULE_TARBALL_DEPLOY' variable.
	3) To disable the Tarball creation, the value of the variable should be set to zero.
	4) The 'DEPLOY_DIR_IMAGE' directory can contain multiple Kernel Module Tarballs for the Machine.
8. The 'bootloaders' is the Bootloader for the Target Device.
	1) If applicable for the Target Machine, the Bootloaders are generated to support the Booting of the Target Device.
	2) The 'DEPLOY_DIR_IMAGE' directory can contain multiple Bootloaders for the Machine.
9. The 'symlinks' are the Symbolic links in the 'DEPLOY_DIR_IMAGE' directory.
	1) They are used to point to the most recently Built file for the Machine.
	2) These links might be useful for external scripts that need to obtain the latest version of each file in the Target Build.
