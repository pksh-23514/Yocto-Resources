Source Materials:
=================
1. In order for the Build system to create an Image or any Target, it must be able to access the source files.
2. The BitBake uses the 'SRC_URI' variable to point to the source files regardless of their location.
3. Each Recipe must have the 'SRC_URI' variable that should point to the source code required for it's Build.
4. The 'DL_DIR' variable is used to point to the area that is a Cache to hold the previously downloaded source.
5. The Build system can be instructed to create Tarballs from the Git repositories and store them in the 'DL_DIR' directory. This is not the default behavior.
6. The above process can be achieved by using the 'BB_GENERATE_MIRROR_TARBALLS' variable.
7. A good method for using the download directory is to have the directory path outside of the 'build' directory.
	1) So, in case if there is a need to delete the Build directory, the downloaded source is left untouched.
	2) The judicious use of the download directory can save the Build system from the trip across the Internet for downloading the source code.
8. The expanded view of the 'Upstream Project Releases, Local Projects and SCMs' in the 'OpenEmbedded Build Workflow' is as follows:

     Upstream Project Releases		Local Projects		  SCMs
----------------------------------- ----------------------- ----------------
|  busybox			  | |  Local Source Tree  | |  meta-qt5	   |
|  busybox-1.35.0.tar.bz2	  | |  <directory>	  | |    Git	   |
|				  | |      <file>	  | |		   |
|  <recipe>			  | |      <directory>	  | |  opkg	   |
|  Tarball / ZIP / Archive Files  | |          <file>	  | |  Subversion  |
----------------------------------- ----------------------- ----------------
		|				|		   |
Source		|				|		   |
Materials	V				V		   V
-----------------------------------------------------------------------------
|  Mirrors			    Pre-Mirrors (Local shared Directories)  |
|  Remotely stored Archive Files    Locally stored Archive Files	    |
-----------------------------------------------------------------------------
					|
			BitBake		V
			---------------------------------
			| Source Fetching and Unpacking |
			---------------------------------

Upstream Project Releases:
**************************
1. The Upstream Project Releases can exist anywhere in the form of an Archived file like Tarball or ZIP or any other Archive file.
2. These files correspond to an individual Recipe only like specific Release for 'busybox', 'Qt', 'Dbus' Recipes.
3. An Archive file can contain any Released product which can be Built using a Recipe.

Local Projects:
***************
1. The Local Projects are custom bits of SW that is provided by the developer.
2. They are available at the location local to the Build i.e. a local directory containing a development source tree.
3. The conventional method to include the Local Projects is by the use of the 'externalsrc' Class.
4. It supports the Build of SW from source code which is external to the OpenEmbedded Build system.
5. The standard OpenEmbedded Build system process of fetch, unpack and applying Patches will not be used in the Build from external source.
6. Either in the 'local.conf' file or through the Recipe's Append file, to point to the local directory on the Disk to pull in the development source tree.

Source Control Managers:
************************
1. The Source Control Managers (SCMs) like Git or Subversion are employed by the BitBake Fetchers to get the source files for the Build system.
2. The repositories are cloned and checked out (if required).
3. The 'do_fetch' Task scheduled by the BitBake uses the 'SRC_URI' variable and the argument's prefix to determine the correct Fetcher module.
4. The 'SRCREV' variable is used to determine the specific revision while fetching the repository to be included in the Build.
