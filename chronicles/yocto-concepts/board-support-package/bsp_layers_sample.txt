Sample Filesystem Layout for BSP Layer:
=======================================
1. The BSP Layer has a common directory structure for the end Users to get familiarized with the Yocto Project or the OpenEmbedded Project standards.
2. However, this standard structure can also be used with the other Build systems as well.
3. It is also intended that the standard structure will be easier to extract the information and convert it into other formats if required.
4. For the OpenEmbedded Project, the standard Layer mechanism is directly accepted.
5. The BSP Layer captures all the HW-specific details in one place using a standard format.
6. This enables to include the Layer directly for using the HW platform regardless of the Build system.
7. The BSP specification does not include a particular Build system or other tools. It is concerned with the HW-specific components only.
8. At the end Distribution point, the BSP Layer can be combined with the Build system and other tools.
9. There is a checklist to be ticked in order for a BSP Layer to be considered as compliant with the Yocto Project.
10. The sample structure for a standard BSP Layer (includes but not limited to):
	1) License files
	2) README files
	3) README.sources file
	4) Pre-Built binaries
	5) Layer Configuration file
	6) HW Configuration options
	7) BSP-specific Recipes
	8) Display support files
	9) Linux Kernel Configurations

License Files:
**************
1. The License files are the files for satisfying the Licensing requirements of the BSP Layer.
2. It is available in the BSP Layer at the following location:
	=> meta-bsp-root-name/bsp-license
3. The type or types of files present in the BSP Layer can vary depending on the Licensing requirement for the Layer.
	1) MIT License
	2) BSD License
	3) GPLv* License
4. These files are recommended for the BSP Layers but are optional to be added in the Layer.

README Files:
*************
1. The README files are the files that provide the information about how to Boot the live Images included by default in the 'binary/' directory.
2. It also provides the information needed for Building these Images.
3. It is available in the BSP Layer at the following location:
	=> meta-bsp-root-name/README
3. The file contains the dependencies i.e. the Layers on which the BSP Layer depends and the name of the BSP Layer Git repository maintainers.

README.sources File:
********************
1. The README.sources file is the file that provides the information about where to locate the BSP source files to Build the Images (if required) included by default.
2. The Images reside in the 'binary/' directory of the BSP Layer. They are the Images released along with the BSP Layer.
3. It is available in the BSP Layer at the following location:
	=> meta-bsp-root-name/README.sources
4. This file also helps to find the Meta-data required to generate these Images shipped with the BSP Layer.
5. If there is no 'binary/' directory present or the Images are missing in the directory, an existing 'README.sources' file is meaningless or the file won't exist in the Layer.

Pre-Built Binaries:
*******************
1. These are the pre-Built Kernel binaries and the Root Filesystem released with the BSP Layer for the specific Target Machine.
2. It is available in the BSP Layer at the following location:
	=> meta-bsp-root-name/binary/bootable_images
3. This is an optional directory in the Layer and the exact types of binaries present in the directory are highly HW dependent.
4. It contains the graphical (Sato) Images or the minimal live Images when the BSP Tarball has been created and made available in the Yocto Project.
5. It can be used to Boot the system quickly for minimal testing without the need to Build an Image using the Layer.
6. The README file should be present in the BSP Layer and that explains how to use these Images with the Target HW.
7. Additionally, the README.sources file should be present that explains how to locate the sources used to Build the Images and provide information on the Meta-data.

Layer Configuration File:
*************************
1. The Configuration file is used as an identification by the BitBake that the given directory structure is a Yocto Project Layer.
2. It identifies the contents of the BSP Layer and it contains information about how the Build system should use this Layer.
3. It is available in the BSP Layer at the following location:
	=> meta-bsp-root-name/conf/layer.conf
4. This is a standard file used in all the Layers with certain modifications.
	=> # We have a conf and classes directory, add to BBPATH
	=> BBPATH .= ":${LAYERDIR}"

	=> # We have a recipes directory containing .bb and .bbappend files, add to BBFILES
	=> BBFILES += "${LAYERDIR}/recipes-*/*/*.bb \
	               ${LAYERDIR}/recipes-*/*/*.bbappend"

	=> BBFILE_COLLECTIONS += "bsp-root-name"
	=> BBFILE_PATTERN_bsp-root-name = "^${LAYERDIR}/"
	=> BBFILE_PRIORITY_bsp-root-name = "6"
	=> LAYERDEPENDS_bsp-root-name = "dependency-name"
5. This file makes the BitBake aware of the Recipes and Configuration directories of the BSP Layer.
6. This file must exist for the OpenEmbedded Build system to recognize the BSP as an actual Layer.
