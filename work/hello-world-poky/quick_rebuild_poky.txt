Quick Build for Other Architecture using the Same Build Directory:
==================================================================

1. For building the Image for ARM Architecture instead of the Intel (x86) Architecture, the changes shall be made to the 'local.conf' file in the 'build/conf' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi conf/local.conf
=> MACHINE ?= "qemuarm"
=> #MACHINE ?= "qemux86-64"

2. On the Host Machine, run the 'bitbake' command with Target Image as 'core-image-minimal' for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake core-image-minimal
Loading cache: 100% |                                                                                                                                            | ETA:  --:--:--
Loaded 0 entries from dependency cache.
Parsing recipes: 100% |##########################################################################################################################################| Time: 0:00:17
Parsing of 883 .bb files complete (0 cached, 883 parsed). 1644 targets, 45 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "ubuntu-20.04"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.12"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta                 
meta-poky            
meta-yocto-bsp       = "my-kirkstone:e19a76951b61ef7403dd64af844a3cfe16fda118"

Initialising tasks: 100% |#######################################################################################################################################| Time: 0:00:01
Sstate summary: Wanted 919 Local 21 Mirrors 0 Missed 898 Current 472 (2% match, 35% complete)
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3582 tasks of which 1615 didn't need to be rerun and all succeeded.

3. After the Build is successful, the Target Image binaries are present under the 'build' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/deploy/images/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ ls
qemuarm  qemux86-64
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ cd qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm$ ls
core-image-minimal-qemuarm-<buildhash>.qemuboot.conf		core-image-minimal-qemuarm.tar.bz2
core-image-minimal-qemuarm-<buildhash>.rootfs.ext4		core-image-minimal-qemuarm.testdata.json
core-image-minimal-qemuarm-<buildhash>.rootfs.manifest		modules--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.tgz
core-image-minimal-qemuarm-<buildhash>.rootfs.tar.bz2		modules-qemuarm.tgz
core-image-minimal-qemuarm-<buildhash>.testdata.json		zImage
core-image-minimal-qemuarm.ext4					zImage--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.bin
core-image-minimal-qemuarm.manifest				zImage.-qemuarm.bin
core-image-minimal-qemuarm.qemuboot.conf

4. To execute the 'core-image-minimal' of 'qemuarm' Architecture on QEMU, the above options can be provided.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ runqemu qemuarm core-image-minimal
runqemu - INFO - Running MACHINE=qemuarm bitbake -e...
runqemu - INFO - Continuing with the following parameters:
KERNEL: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/zImage]
MACHINE: [qemuarm]
FSTYPE: [ext4]
ROOTFS: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.ext4]
CONFFILE: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.qemuboot.conf]

5. A video Console will appear on the Standard Output displaying the Boot log. However, it will show an error 'Guest has not initialized the dispaly (yet)'.

6. The QEMU should be run without the video Console using the 'nographic' option. The Boot log is then displayed on the Host Machine Console itself.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ runqemu qemuarm core-image-minimal nographic
runqemu - INFO - Running MACHINE=qemuarm bitbake -e...
runqemu - INFO - Continuing with the following parameters:
KERNEL: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/zImage]
MACHINE: [qemuarm]
FSTYPE: [ext4]
ROOTFS: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.ext4]
CONFFILE: [/home/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.qemuboot.conf]
...
[    0.000000] Linux version 5.15.32 (oe-user@oe-host) ... 
...
Poky (Yocto Project Reference Distro) 4.0.16 qemux86-64 /dev/ttyx

qemuarm login: root
root@qemuarm:~# echo "Hello Yocto!"
Hello Yocto
root@qemuarm:~#

7. If the QEMU is executed in the 'nographic' mode, it cannot be quit by pressing 'Ctrl+C' in the Console. The only way then would be to run the command 'poweroff'.
root@qemuarm:~# poweroff
