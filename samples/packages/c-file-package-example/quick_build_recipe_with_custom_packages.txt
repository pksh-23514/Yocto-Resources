Quick Build of Recipe for ARM Architecture with Custom Packages:
================================================================

1. For building the Image for ARM Architecture instead of the Intel (x86) Architecture, the changes shall be made to the 'local.conf' file in the 'build/conf' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi conf/local.conf
=> MACHINE ?= "qemuarm"
=> #MACHINE ?= "qemux86-64"

2. The Layer directory should be created for the the BitBake to pick it up during the Build. The 'bitbake-layers' command is used to create and add the compatible Layer.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake-layers create-layer ../meta-layer
NOTE: Starting bitbake server...
Add your new layer with 'bitbake-layers add-layer /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer'
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake-layers add-layer ../meta-layer
NOTE: Starting bitbake server...
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake-layers show-layers
NOTE: Starting bitbake server...
layer                 path                                      priority
==========================================================================
meta                  /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta   5
meta-poky             /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-poky  5
meta-yocto-bsp        /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-yocto-bsp  5
meta-layer            /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer  5

3. The Recipe file and the source C file must be placed in the Layer structure in such a way that the BitBake is able to pick them up during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd ../meta-layer/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer$ ls
conf  COPYING.MIT  README  recipes-example
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer$ cd recipes-example/

---> It is important to note that the name of the Recipe folder must match with the name of the Recipe file name being used to Build the SW.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ mkdir hello-package
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ ls
example  hello-package
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello-package/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ mkdir files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ cd files/

4. Include the C file and the README file in the 'files' directory of the Layer.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/files$ vi hello.c
---> Add the contents of the C file to be Built using the Recipe.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/files$ vi README.txt
---> Add the contents of the README file to be Built using the Recipe.

5. Include the Recipe file in the Recipe folder i.e. 'hello-package' for the BitBake to be able to read it during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/files$ cd ..
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ vi hello-package_0.1.bb
---> Add the contents of the Recipe file to Build the C file.

6. This is the final Layer directory structure which is compatible with the BitBake for the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ cd ..
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ tree hello-package
hello-package
├── files
│   ├── hello.c
│   └── README.txt
└── hello-package_0.1.bb

1 directory, 3 files

7. Modify the Recipe file in the Recipe folder i.e. 'hello-package' to set a custom value to the 'PACKAGES' variable along with their respective 'FILES' variable.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello-package/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ vi hello-package_0.1.bb
=> ...

=> PACKAGES = "${PN} ${PN}-dbg"
=> FILES:${PN}-dbg += "${bindir}/hello"
=> FILES:${PN} += "${bindir}/hello"

8. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-package
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 885 .bb files complete (884 cached, 1 parsed). 1646 targets, 63 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 4 Local 0 Mirrors 0 Missed 4 Current 150 (0% match, 97% complete)
Removing 3 stale sstate objects for arch cortexa15t2hf-neon: 100% |################################################################################################| Time: 0:00:00
Removing 1 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
ERROR: hello-package-0.1-r0 do_package: QA Issue: hello-package: Files/directories were installed but not shipped in any package:
  /usr/include
  /usr/include/README.txt
Please set FILES such that these items are packaged. Alternatively if they are unneeded, avoid installing them or delete them within do_install.
hello-package: 2 installed and not shipped files. [installed-vs-shipped]
ERROR: hello-package-0.1-r0 do_package: Fatal QA errors were found, failing task.
ERROR: Logfile of failure stored in: /home/prabhat_kiran/.../Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0/temp/log.do_package.2564607
ERROR: Task (/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/hello-package_0.1.bb:do_package) failed with exit code '1'
NOTE: Tasks Summary: Attempted 634 tasks of which 633 didn't need to be rerun and 1 failed.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

Summary: 1 task failed:
  /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/hello-package_0.1.bb:do_package
Summary: There were 2 ERROR messages, returning a non-zero exit code.

9. The Recipe Build failed as the README file is not packaged into any of the Packages created for this Recipe. This is a classic 'installed-vs-shipped' error.
	1) The README file is installed into the 'includedir' directory by the 'do_install' Task.
	2) This can be confirmed by verifying the 'image' directory in the 'WORKDIR' directory.
	3) However, the README file is not packaged into any of the Packages specified in the 'PACKAGES' variable in the Recipe file.

10. Modify the Recipe file in the Recipe folder i.e. 'hello-package' to include the README file in the 'FILES:${PN}' variable.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello-package/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ vi hello-package_0.1.bb
=> ...

=> PACKAGES = "${PN} ${PN}-dbg"
=> FILES:${PN}-dbg += "${bindir}/hello"
=> FILES:${PN} += "${bindir}/hello ${includedir}/README.txt"

11. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-package
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 885 .bb files complete (884 cached, 1 parsed). 1646 targets, 63 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 4 Local 0 Mirrors 0 Missed 4 Current 150 (0% match, 97% complete)
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 638 tasks of which 633 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

12. After the Recipe Build is successful, the 'WORKDIR' directory contains all the files and directories generated during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ ls
configure.sstate   deploy-source-date-epoch  hello-package.spec  package         pkgdata              pseudo          recipe-sysroot-native                    sysroot-destdir
debugsources.list  hello                     image               packages-split  pkgdata-pdata-input  README.txt      source-date-epoch                        temp
deploy-rpms        hello.c                   license-destdir     patches         pkgdata-sysroot      recipe-sysroot  sstate-install-deploy_source_date_epoch
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ tree packages-split
packages-split
├── hello-package
│   └── usr
│       └── include
│           └── README.txt
├── hello-package-dbg
│   └── usr
│       └── bin
│           └── hello
├── hello-package-dbg.shlibdeps
└── hello-package-src

7 directories, 3 files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ tree deploy-rpms
deploy-rpms
└── cortexa15t2hf_neon
    ├── hello-package-0.1-r0.cortexa15t2hf_neon.rpm
    └── hello-package-dbg-0.1-r0.cortexa15t2hf_neon.rpm

1 directory, 2 files

13. The Recipe Build Environment can be used to fetch the 'PACKAGES' variable related to the Recipe using the 'bitbake -e' command.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ cd ../../../../../
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake -e hello-package | grep ^PACKAGES=
PACKAGES="hello-package hello-package-dbg"

14. Although, the new definition of the 'PACKAGES' variable is such that the order of the Package list is '${PN}' and then '${PN}-dbg', the 'hello' file is under '${PN}-dbg'.
	1) This is a classic Yocto Packaging behavior that often confuses even experienced developers.
	2) During the 'do_package' Task, the BitBake splits the Built files into per-Package directories according to the 'FILES' variable.
	3) Then, the BitBake's 'split_and_strip' process defined in the 'meta/lib/oe/package.py' file is executed. The process depends on the 'INHIBIT_PACKAGE_DEBUG_SPLIT' value.
	4) The 'hello' binary is stripped i.e. the debug info is removed. The debug info gets copied to the '${PN}-dbg' Package.
	5) Depending on the Build Configuration, the complete binary with debug info can also be copied to the '${PN}-dbg' Package.
	6) This process happens before the 'FILES' variable is processed by the BitBake.
	7) Therefore, even if the 'hello' file should be packaged under the '${PN}' as per the order in the 'PACKAGES', it is already assigned to the '${PN}-dbg' Package.
	8) The '${PN}-dbg' Package is a special Package automatically handled by the BitBake, all the files that match the debug patterns are directed to this Package.
	9) The BitBake's 'split_and_strip' process automatically moves the stripped binary and their Debug-Symbol file into the '${PN}-dbg' Package.

15. To override the default implementation of the BitBake, the Recipe file in the Recipe folder i.e. 'hello-package' must be modified.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello-package/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ vi hello-package_0.1.bb
=> ...

=> PACKAGES = "${PN} ${PN}-binary"
=> # FILES:${PN}-dbg += "${bindir}/hello"
=> FILES:${PN} += "${bindir}/hello ${includedir}/README.txt"
=> FILES:${PN}-binary += "${bindir}/hello"

16. The Recipe Build Environment can be used to fetch the 'PACKAGES' variable related to the Recipe using the 'bitbake -e' command.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ cd ../../../../../
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake -e hello-package | grep ^PACKAGES=
PACKAGES="hello-package hello-package-binary"

17. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-package
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 4 Local 0 Mirrors 0 Missed 4 Current 150 (0% match, 97% complete)
Removing 3 stale sstate objects for arch cortexa15t2hf-neon: 100% |################################################################################################| Time: 0:00:00
Removing 1 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
ERROR: hello-package-0.1-r0 do_package: QA Issue: hello-package: Files/directories were installed but not shipped in any package:
  /usr/bin/.debug
  /usr/bin/.debug/hello
Please set FILES such that these items are packaged. Alternatively if they are unneeded, avoid installing them or delete them within do_install.
hello-package: 2 installed and not shipped files. [installed-vs-shipped]
ERROR: hello-package-0.1-r0 do_package: Fatal QA errors were found, failing task.
ERROR: Logfile of failure stored in: /home/prabhat_kiran/.../Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0/temp/log.do_package.2579704
ERROR: Task (/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/hello-package_0.1.bb:do_package) failed with exit code '1'
NOTE: Tasks Summary: Attempted 634 tasks of which 633 didn't need to be rerun and 1 failed.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

Summary: 1 task failed:
  /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package/hello-package_0.1.bb:do_package
Summary: There were 2 ERROR messages, returning a non-zero exit code.

18. The Recipe Build failed as the Debug-Symbol file is not packaged into any of the Packages created for this Recipe. This is a classic 'installed-vs-shipped' error.
	1) The BitBake's 'split_and_strip' process defined in the 'meta/lib/oe/package.py' file is executed. The process depends on the 'INHIBIT_PACKAGE_DEBUG_SPLIT' value.
	2) The BitBake's 'split_and_strip' process automatically moves the stripped binary and their Debug-Symbol file into the '${PN}-dbg' Package.
	3) The 'hello' binary is stripped i.e. the debug info is removed. The debug info is supposed to be copied to the '${PN}-dbg' Package.
	4) There is no '${PN}-dbg' Package mentioned in the 'PACKAGES' variable. Hence, that Package is never created by the BitBake.
	5) Therefore, the '.debug' directory is installed at "/usr/bin/" directory by the 'do_install' Task.
	6) However, the '.debug' directory is not packaged into any of the Packages specified in the 'PACKAGES' variable in the Recipe file.

19. Modify the Recipe file in the Recipe folder i.e. 'hello-package' to include the '.debug' directory in the '${PN}-dbg' Package.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello-package/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello-package$ vi hello-package_0.1.bb
=> ...

PACKAGES = "${PN} ${PN}-binary ${PN}-dbg"
FILES:${PN}-dbg += "${bindir}/.debug/*"
FILES:${PN} += "${bindir}/hello ${includedir}/README.txt"
FILES:${PN}-binary += "${bindir}/hello"

20. The Recipe Build Environment can be used to fetch the 'PACKAGES' variable related to the Recipe using the 'bitbake -e' command.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ cd ../../../../../
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake -e hello-package | grep ^PACKAGES=
PACKAGES="hello-package hello-package-binary hello-package-dbg"

21. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-package
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 885 .bb files complete (884 cached, 1 parsed). 1646 targets, 63 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 4 Local 0 Mirrors 0 Missed 4 Current 150 (0% match, 97% complete)
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 638 tasks of which 633 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

22. After the Recipe Build is successful, the 'WORKDIR' directory contains all the files and directories generated during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ ls
configure.sstate   deploy-source-date-epoch  hello-package.spec  package         pkgdata              pseudo          recipe-sysroot-native                    sysroot-destdir
debugsources.list  hello                     image               packages-split  pkgdata-pdata-input  README.txt      source-date-epoch                        temp
deploy-rpms        hello.c                   license-destdir     patches         pkgdata-sysroot      recipe-sysroot  sstate-install-deploy_source_date_epoch
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ tree packages-split
packages-split
├── hello-package
│   └── usr
│       ├── bin
│       │   └── hello
│       └── include
│           └── README.txt
├── hello-package-binary
├── hello-package-dbg
│   └── usr
│       └── bin
├── hello-package.shlibdeps
└── hello-package-src

9 directories, 3 files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-package/0.1-r0$ tree deploy-rpms
deploy-rpms
└── cortexa15t2hf_neon
    ├── hello-package-0.1-r0.cortexa15t2hf_neon.rpm
    └── hello-package-dbg-0.1-r0.cortexa15t2hf_neon.rpm

1 directory, 2 files
