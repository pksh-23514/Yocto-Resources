Integration of Recipe with All Files Installed to the Image Build:
==================================================================

1. Although the Recipe Build is successful, it does not gets automatically included in the Image Build.

2. The Recipe must be appended to the 'IMAGE_INSTALL' variable of the Image Recipe for it to be included in the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi ../meta/recipes-core/images/core-image-minimal.bb
=> IMAGE_INSTALL:append = " hello-package"

3. After the Image Recipe file is updated, run the 'bitbake' command with Target Image as 'core-image-minimal' for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake core-image-minimal
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 885 .bb files complete (877 cached, 8 parsed). 1646 targets, 63 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:02
Sstate summary: Wanted 2 Local 0 Mirrors 0 Missed 2 Current 1395 (0% match, 99% complete)
Removing 2 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3595 tasks of which 3585 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

4. After the Build is successful, the Target Image binaries are present under the 'build' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/deploy/images/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ ls
qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ cd qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm$ ls
core-image-minimal-qemuarm-<buildhash>.qemuboot.conf		core-image-minimal-qemuarm.tar.bz2
core-image-minimal-qemuarm-<buildhash>.rootfs.ext4		core-image-minimal-qemuarm.testdata.json
core-image-minimal-qemuarm-<buildhash>.rootfs.manifest		modules--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.tgz
core-image-minimal-qemuarm-<buildhash>.rootfs.tar.bz2		modules-qemuarm.tgz
core-image-minimal-qemuarm-<buildhash>.testdata.json		zImage
core-image-minimal-qemuarm.ext4					zImage--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.bin
core-image-minimal-qemuarm.manifest				zImage-qemuarm.bin
core-image-minimal-qemuarm.qemuboot.conf

5. To execute the 'core-image-minimal' Image Built for 'qemuarm' Architecture on QEMU, the below commands can be provided.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ runqemu qemuarm core-image-minimal nographic
runqemu - INFO - Running MACHINE=qemuarm bitbake -e ...
runqemu - INFO - Continuing with the following parameters:
KERNEL: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/zImage]
MACHINE: [qemuarm]
FSTYPE: [ext4]
ROOTFS: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.ext4]
CONFFILE: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.qemuboot.conf]

...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.15.184-yocto-standard (oe-user@oe-host) (arm-poky-linux-gnueabi-gcc (GCC) 11.5.0, GNU ld (GNU Binutils) 2.38.20220708) ...
[    0.000000] CPU: ARMv7 Processor [412fc0f1] revision 1 (ARMv7), cr=30c5387d
...

Poky (Yocto Project Reference Distro) 4.0.27 qemuarm /dev/ttyAMA0

qemuarm login: root
root@qemuarm:~#

6. The Cross-Compiled C file binary and the README file should be located in the directory on which it is installed in the Recipe file along with the specified file permissions.
root@qemuarm:~# ls -l /usr/bin/hello
-rwxr-xr-x    1 root     root          5508 Mar  9  2018 /usr/bin/hello
root@qemuarm:~# hello
Hello World!
root@qemuarm:~# ls /usr/share/
dict    info    man     misc    udhcpc

7. After running the Built Image containing all the installed files on the QEMU, the following observation is made:
	1) The Cross-Compiled C file binary is located in the 'bindir' directory i.e. "/usr/bin/" as specified in the Recipe file.
	2) However, the README file is not located in the 'docdir' directory i.e. "/usr/share/doc/" as specified in the Recipe file.
	3) The complete "/usr/share/doc/" directory is absent from the Built Image. This can only happen if there is no file to kept under this directory.

8. The reason for the above observations is that the values mentioned in the 'IMAGE_INSTALL' variable are actually the Package names.
	1) In the above Image Build, the 'IMAGE_INSTALL' variable is appended with 'hello-package' Package only in the Image Recipe file.
	2) The 'hello-package-doc' Package name is not appended in the 'IMAGE_INSTALL' variable in the Image Recipe file.
	3) Therefore, the README file is not present in the Built Image.

9. To exit the QEMU Console, run the below command.
root@qemuarm:~# poweroff

Broadcast message from root@qemuarm (ttyAMA0) (Wed Aug 20 15:04:32 2025):

The system is going down for system halt NOW!
INIT: Switching to runlevel: 0
INIT: Sending processes configured via /etc/inittab the TERM signal
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 332)
dropbear.
Stopping syslogd/klogd: stopped syslogd (pid 340)
stopped klogd (pid 343)
done
Unmounting remote filesystems...
Deconfiguring network interfaces... ifdown: interface lo not configured
done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Deactivating swap...
Unmounting local filesystems...
[  375.735490] EXT4-fs (vda): re-mounted. Opts: (null). Quota mode: disabled.
[  375.954866] reboot: Power down
runqemu - INFO - Cleaning up
runqemu - INFO - Host uptime: 257996.61

Set 'tap0' nonpersistent
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$

10. All the necessary Packages must be appended to the 'IMAGE_INSTALL' variable of the Image Recipe for it to be included in the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi ../meta/recipes-core/images/core-image-minimal.bb
=> IMAGE_INSTALL:append = " hello-package hello-package-doc"

11. After the Image Recipe file is updated, run the 'bitbake' command with Target Image as 'core-image-minimal' for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake core-image-minimal
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1646 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 885 .bb files complete (877 cached, 8 parsed). 1646 targets, 63 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.30"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:7f12221f49c32ba320ee175a3f47eb8005db574c"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:02
Sstate summary: Wanted 2 Local 0 Mirrors 0 Missed 2 Current 1395 (0% match, 99% complete)
Removing 2 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3595 tasks of which 3585 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 1 seconds

12. The updated Image have both the Cross-Compiled C file binary and the README file in the RootFS binary. This can be tested on QEMU.
