Yocto Image Build for ARM Architecture having Makefile with 'install' and 'uninstall' Rules:
============================================================================================

1. For building the Image for ARM Architecture instead of the Intel (x86) Architecture, the changes shall be made to the 'local.conf' file in the 'build/conf' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi conf/local.conf
=> MACHINE ?= "qemuarm"
=> #MACHINE ?= "qemux86-64"

2. In the Makefile, there can be 'install' and 'uninstall' rules explicitly defined. This can be utilized in the Recipe Build as well to place the files into the Image.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi ../meta-layer/recipes-example/hello-make/files/Makefile
=> ...
=>	install:
=>			install -d $(DESTDIR)
=>			install -m 0755 $(TARGET) $(DESTDIR)
...
=>	uninstall:
=>			rm $(DESTDIR)$(TARGET)
=> ...

3. In order to try the 'make install' command, the 'do_install' Task is removed from the Recipe file.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi ../meta-layer/recipes-example/hello-make/hello-make_0.1.bb
---> Remove the 'do_install' Task from the contents of the Recipe file to Build the C file.

4. On the Host Machine, run the 'bitbake -c cleanall' command with Target as the Recipe name for cleaning the existing Recipe Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake -c cleanall hello-make
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1776 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 981 .bb files complete (980 cached, 1 parsed). 1776 targets, 159 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 0 Local 0 Mirrors 0 Missed 0 Current 0 (0% match, 0% complete)
NOTE: No setscene tasks
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3 tasks of which 0 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 5 seconds
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ ls
temp
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ rm -rf *

5. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-make
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1776 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:01
Sstate summary: Wanted 9 Local 0 Mirrors 0 Missed 9 Current 153 (0% match, 94% complete)
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 667 tasks of which 650 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 2 seconds

6. After the Recipe Build is successful, the 'WORKDIR' directory contains all the files and directories generated during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ ls
configure.sstate  deploy-rpms               image            package         pkgdata              program    recipe-sysroot         sysroot-destdir
deploy-debs       deploy-source-date-epoch  license-destdir  packages-split  pkgdata-pdata-input  program.c  recipe-sysroot-native  temp
deploy-ipks       hello-make.spec           Makefile         patches         pkgdata-sysroot      pseudo     source-date-epoch

7. The files and directories can be analyzed for getting an understanding of the Recipe Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ tree image
image

0 directories, 0 files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ tree package
package

0 directories, 0 files

8. There is no files and directories present in the 'image', the 'package' or the 'packages-split' directories. The 'run.do_install' file can be analyzed for the Task logs.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ vi temp/run.do_install
=> ...
=> # line: 1, file: autogenerated
=> do_install() {
=>     base_do_install
=> }

=> # line: 376, file: /home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/meta/classes/base.bbclass
=> base_do_install() {
=>         :
=> }

=> cd '/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0'
=> do_install
=> ...
---> The 'do_install' Task by default does nothing. Therefore, nothing is added in the 'image', the 'package' or the 'packages-split' directories.

9. Therefore, the 'do_install' Task cannot be removed from the Recipe file. Instead, the 'oe_runmake install' command must be used in the 'do_install' Task.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi ../meta-layer/recipes-example/hello-make/hello-make_0.1.bb
=> ...
=> do_install() {
=>     oe_runmake install DESTDIR=${D}/usr/bin
=> }
---> The Makefile expects the value of 'DESTDIR' variable and it has the same value as in the earlier Build. Otherwise, the Build will throw an error.

10. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello-make
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1776 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 981 .bb files complete (980 cached, 1 parsed). 1776 targets, 159 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 9 Local 0 Mirrors 0 Missed 9 Current 153 (0% match, 94% complete)
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 667 tasks of which 650 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 2 seconds

11. After the Recipe Build is successful, the 'WORKDIR' directory contains all the files and directories generated during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ ls
configure.sstate   deploy-ipks               hello-make.spec  Makefile        patches              pkgdata-sysroot  pseudo                 source-date-epoch
debugsources.list  deploy-rpms               image            package         pkgdata              program          recipe-sysroot         sysroot-destdir
deploy-debs        deploy-source-date-epoch  license-destdir  packages-split  pkgdata-pdata-input  program.c        recipe-sysroot-native  temp

12. The files and directories can be analyzed for getting an understanding of the Recipe Build. The 'image', the 'package' and the 'packages-split' directories are now correct.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ file program
program: ELF 32-bit LSB shared object, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, BuildID[sha1]=xxx, ..., with debug_info, not stripped
---> Since the selected 'MACHINE' is ARM-32 bit, so the file is Cross-Compiled to that Architecture.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ tree package
package
└── usr
    ├── bin
    │	└── program
    └── src
        └── debug
            └── hello-make
                └── 0.1-r0
                    └── program.c

6 directories, 2 files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ tree packages-split
packages-split
├── hello-make
│   └── usr
│       └── bin
│           └── program
├── hello-make-dbg
│   └── usr
│       └── bin
├── hello-make-dev
├── hello-make-doc
├── hello-make-locale
├── hello-make.shlibdeps
├── hello-make-src
│   └── usr
│       └── src
│           └── debug
│               └── hello-make
│                   └── 0.1-r0
│                       └── program.c
└── hello-make-staticdev

16 directories, 3 files
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello-make/0.1-r0$ tree image
image
└── usr
    └── bin
        └── program

2 directories, 1 file

13. After the Recipe Build is successful, run the 'bitbake' command with Target Image as 'core-image-minimal' for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake core-image-minimal
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1775 entries from dependency cache.
Parsing recipes: 100% |############################################################################################################################################| Time: 0:00:00
Parsing of 981 .bb files complete (973 cached, 8 parsed). 1776 targets, 159 skipped, 0 masked, 0 errors.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:02
Sstate summary: Wanted 11 Local 9 Mirrors 0 Missed 2 Current 1394 (81% match, 99% complete)
Removing 2 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3610 tasks of which 3600 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 9 seconds

14. After the Build is successful, the Target Image binaries are present under the 'build' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/deploy/images/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ ls
qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ cd qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm$ ls
core-image-minimal-qemuarm-<buildhash>.qemuboot.conf		core-image-minimal-qemuarm.tar.bz2
core-image-minimal-qemuarm-<buildhash>.rootfs.ext4		core-image-minimal-qemuarm.testdata.json
core-image-minimal-qemuarm-<buildhash>.rootfs.manifest		modules--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.tgz
core-image-minimal-qemuarm-<buildhash>.rootfs.tar.bz2		modules-qemuarm.tgz
core-image-minimal-qemuarm-<buildhash>.testdata.json		zImage
core-image-minimal-qemuarm.ext4					zImage--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.bin
core-image-minimal-qemuarm.manifest				zImage-qemuarm.bin
core-image-minimal-qemuarm.qemuboot.conf

15. To execute the 'core-image-minimal' Image Built for 'qemuarm' Architecture on QEMU, the below commands can be provided.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ runqemu qemuarm core-image-minimal nographic
runqemu - INFO - Running MACHINE=qemuarm bitbake -e ...
runqemu - INFO - Continuing with the following parameters:
KERNEL: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/zImage]
MACHINE: [qemuarm]
FSTYPE: [ext4]
ROOTFS: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.ext4]
CONFFILE: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.qemuboot.conf]

...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.15.184-yocto-standard (oe-user@oe-host) (arm-poky-linux-gnueabi-gcc (GCC) 11.5.0, GNU ld (GNU Binutils) 2.38.20220708) ...
[    0.000000] CPU: ARMv7 Processor [412fc0f1] revision 1 (ARMv7), cr=30c5387d
...

Poky (Yocto Project Reference Distro) 4.0.27 qemuarm /dev/ttyAMA0

qemuarm login: root
root@qemuarm:~# ls -l /usr/bin/ | grep "program"
-rwxr-xr-x    1 root     root          5508 Mar  9  2018 program
root@qemuarm:~# program
Hello System Call!
