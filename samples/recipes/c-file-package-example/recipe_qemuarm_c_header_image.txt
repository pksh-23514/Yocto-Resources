Yocto Image Build for ARM Architecture having C File that Includes Header:
==========================================================================

1. For building the Image for ARM Architecture instead of the Intel (x86) Architecture, the changes shall be made to the 'local.conf' file in the 'build/conf' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ vi conf/local.conf
=> MACHINE ?= "qemuarm"
=> #MACHINE ?= "qemux86-64"

2. Include the C file's Header file in the 'files' directory of the Layer.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd ../meta-layer/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer$ ls
conf  COPYING.MIT  README  recipes-example
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer$ cd recipes-example/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ ls
example  hello
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ cd hello/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello$ cd files/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello/files$ vi hello.h
=> void display();

3. Modify the C file to include the Header file and use the function call for the required purpose.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello/files$ vi hello.c
=> #include <stdio.h>
=> #include "hello.h"

=> int main()
=> {
	   printf ("Hello World!\n");
	   display();
	   return 0;
=> }

=> void display()
=> {
=> 	   printf ("Hello from Function!\n");
=> }

4. Update the Recipe file in the Recipe folder i.e. 'hello' to accomodate the Header file in the C file Compilation.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello/files$ cd ..
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello$ vi hello_0.1.bb
=> SRC_URI = " \
=>     file://hello.c \
=>     file://hello.h \
=> "

5. This is the final Layer directory structure which is compatible with the BitBake for the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example/hello$ cd ..
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/meta-layer/recipes-example$ tree hello
hello
├── files
│   ├── hello.c
│   └── hello.h
└── hello_0.1.bb

1 directory, 3 files

6. On the Host Machine, run the 'bitbake' command with Target as the Recipe name for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake hello
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1775 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:00
Sstate summary: Wanted 9 Local 0 Mirrors 0 Missed 9 Current 153 (0% match, 94% complete)
Removing 8 stale sstate objects for arch cortexa15t2hf-neon: 100% |################################################################################################| Time: 0:00:00
Removing 1 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 667 tasks of which 650 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 2 seconds

7. After the Recipe Build is successful, the 'WORKDIR' directory contains all the files and directories generated during the Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello/0.1-r0
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/work/cortexa15t2hf-neon-poky-linux-gnueabi/hello/0.1-r0$ ls
configure.sstate   deploy-ipks               hello       image            packages-split  pkgdata-pdata-input  recipe-sysroot         sysroot-destdir
debugsources.list  deploy-rpms               hello.c     license-destdir  patches         pkgdata-sysroot      recipe-sysroot-native  temp
deploy-debs        deploy-source-date-epoch  hello.spec  package          pkgdata         pseudo               source-date-epoch

8. After the Recipe Build is successful, run the 'bitbake' command with Target Image as 'core-image-minimal' for a quick Build.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ bitbake core-image-minimal
Loading cache: 100% |##############################################################################################################################################| Time: 0:00:00
Loaded 1775 entries from dependency cache.
NOTE: Resolving any missing task queue dependencies

Build Configuration:
BB_VERSION           = "2.0.0"
BUILD_SYS            = "x86_64-linux"
NATIVELSBSTRING      = "universal"
TARGET_SYS           = "arm-poky-linux-gnueabi"
MACHINE              = "qemuarm"
DISTRO               = "poky"
DISTRO_VERSION       = "4.0.27"
TUNE_FEATURES        = "arm vfp cortexa15 neon thumb callconvention-hard"
TARGET_FPU           = "hard"
meta
meta-poky
meta-yocto-bsp
meta-layer           = "my-kirkstone:81e0dc80d72d66b7f15a34c0da7a0a8c58809056"
meta-ti-bsp          = "kirkstone:52018a8d730b2977d7163bf56c398905ef9115ac"
meta-arm
meta-arm-toolchain   = "kirkstone:10c27f061b22af78e17a23cf540b69501afc7160"

Initialising tasks: 100% |#########################################################################################################################################| Time: 0:00:02
Sstate summary: Wanted 11 Local 9 Mirrors 0 Missed 2 Current 1394 (81% match, 99% complete)
Removing 2 stale sstate objects for arch qemuarm: 100% |###########################################################################################################| Time: 0:00:00
NOTE: Executing Tasks
NOTE: Tasks Summary: Attempted 3610 tasks of which 3600 didn't need to be rerun and all succeeded.
NOTE: Writing buildhistory
NOTE: Writing buildhistory took: 3 seconds

9. After the Build is successful, the Target Image binaries are present under the 'build' directory.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ cd tmp/deploy/images/
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ ls
qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images$ cd qemuarm
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm$ ls
core-image-minimal-qemuarm-<buildhash>.qemuboot.conf		core-image-minimal-qemuarm.tar.bz2
core-image-minimal-qemuarm-<buildhash>.rootfs.ext4		core-image-minimal-qemuarm.testdata.json
core-image-minimal-qemuarm-<buildhash>.rootfs.manifest		modules--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.tgz
core-image-minimal-qemuarm-<buildhash>.rootfs.tar.bz2		modules-qemuarm.tgz
core-image-minimal-qemuarm-<buildhash>.testdata.json		zImage
core-image-minimal-qemuarm.ext4					zImage--5.15.184+git0+9c4fc176ec_27eaa24a04-r0-qemuarm-<buildhash>.bin
core-image-minimal-qemuarm.manifest				zImage-qemuarm.bin
core-image-minimal-qemuarm.qemuboot.conf

10. To execute the 'core-image-minimal' Image Built for 'qemuarm' Architecture on QEMU, the below commands can be provided.
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$ runqemu qemuarm core-image-minimal nographic
runqemu - INFO - Running MACHINE=qemuarm bitbake -e ...
runqemu - INFO - Continuing with the following parameters:
KERNEL: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/zImage]
MACHINE: [qemuarm]
FSTYPE: [ext4]
ROOTFS: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.ext4]
CONFFILE: [/home/prabhat_kiran/Documents/Learnings/Yocto_Resources/Poky/poky/build/tmp/deploy/images/qemuarm/core-image-minimal-qemuarm.qemuboot.conf]

...

[    0.000000] Booting Linux on physical CPU 0x0
[    0.000000] Linux version 5.15.184-yocto-standard (oe-user@oe-host) (arm-poky-linux-gnueabi-gcc (GCC) 11.5.0, GNU ld (GNU Binutils) 2.38.20220708) ...
[    0.000000] CPU: ARMv7 Processor [412fc0f1] revision 1 (ARMv7), cr=30c5387d
...

Poky (Yocto Project Reference Distro) 4.0.27 qemuarm /dev/ttyAMA0

qemuarm login: root
root@qemuarm:~#

11. The Cross-Compiled C file binary should be located in the directory on which it is installed in the Recipe file along with the specified file permissions.
root@qemuarm:~# ls -l /usr/bin/ | grep "hello"
-rwxr-xr-x    1 root     root          5508 Mar  9  2018 hello
root@qemuarm:~# hello
Hello World!
Hello from Function!

12. 3. To exit the QEMU Console, run the below command.
root@qemuarm:~# poweroff

Broadcast message from root@qemuarm (ttyAMA0) (Wed Aug 20 15:04:32 2025):

The system is going down for system halt NOW!
INIT: Switching to runlevel: 0
INIT: Sending processes configured via /etc/inittab the TERM signal
Stopping Dropbear SSH server: stopped /usr/sbin/dropbear (pid 332)
dropbear.
Stopping syslogd/klogd: stopped syslogd (pid 340)
stopped klogd (pid 343)
done
Unmounting remote filesystems...
Deconfiguring network interfaces... ifdown: interface lo not configured
done.
Sending all processes the TERM signal...
Sending all processes the KILL signal...
Deactivating swap...
Unmounting local filesystems...
[  375.735490] EXT4-fs (vda): re-mounted. Opts: (null). Quota mode: disabled.
[  375.954866] reboot: Power down
runqemu - INFO - Cleaning up
runqemu - INFO - Host uptime: 257996.61

Set 'tap0' nonpersistent
prabhat_kiran@coldstone:~/Documents/Learnings/Yocto_Resources/Poky/poky/build$
